logfile = "test.log";
log-level = "info";

resize-type = "regular";
resize-crop-center = true;

instances = ({
	instance-name = "my instance name";

	# show a locally connected camera or any other
	# video4linux source
	source = {
		id = "1-1";
		descr = "video4linux source";
		type = "v4l";
		device = "/dev/video0";
		width = 640;
		height = 480;
		pixel-format = "RGB3";
		max-fps = -1.0;
		filters = ()
	}

	# here we define a motion-trigger
	# in this example it will listen to UDP port 1234 via
	# a plugin. if a UDP packet is received, the motion-
	# trigger is triggered and actions under 'target' are
	# invoked
	motion-trigger = (
		 {
			id = "1-3";
			descr = "motion trigger via socket";

			noise-factor = 32;
			min-pixels-changed-percentage = 0.6;
			max-pixels-changed-percentage = 90.0;
			min-duration = 15;
			mute-duration = 5;
			pre-motion-record-duration = 15;

			warmup-duration = 10;
			max-fps = -1.0;

			trigger-plugin-file = "motiontrigger-plugins/network.so.0.1";
			trigger-plugin-parameter = "1234";

			selection-bitmap = "";

			filters-detection = [ ];
			exec-start = "";
			exec-end = "";

			targets = (
				# this target stores a video on disk
                                {
                                        id = "1-4";
                                        descr = "motion output";
					# store in current path
                                        path = "./";
                                        prefix = "motion-";
                                        quality = 75;
                                        restart-interval = 86400;
                                        fps = 5.0;
                                        override-fps = -1.0;
                                        format = "avi";
                                        stream-writer-plugin-file = "";
                                        stream-writer-plugin-parameter = "";
                                        exec-start = "";
                                        exec-cycle = "";
                                        exec-end = "";
                                        filters = (   )
                                }
			)
		}
	)
})
